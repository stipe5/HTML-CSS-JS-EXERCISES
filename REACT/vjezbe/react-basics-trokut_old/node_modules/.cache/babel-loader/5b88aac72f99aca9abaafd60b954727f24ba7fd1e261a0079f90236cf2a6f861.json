{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stipe\\\\Desktop\\\\NEET Akademija\\\\REACT\\\\test\\\\drugi_test\\\\react-basics-trokut\\\\src\\\\components\\\\Slideshow\\\\Slideshow.js\",\n  _s2 = $RefreshSig$();\n/** Here you can write the code for your slideshow component\r\n *  you can use the images placed in the slideshowData file\r\n */\nimport { useState } from \"react\";\nimport \"./Slideshow.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SlideShowComponent(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  let slidesLength = props.data.map(a => a.name);\n  console.log(slidesLength);\n  const [currentPage, setCurrentPage] = useState(0);\n  function InitDots() {\n    _s();\n    const [isActive, setIsActive] = useState(false);\n    return props.data.map((element, index) => /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"bi bi-circle-fill\",\n      id: index,\n      onClick: () => setCurrentPage(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 48\n    }, this));\n  }\n  _s(InitDots, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n  function handleClick(dir) {\n    if (dir == \"left\" && currentPage != 0) {\n      setCurrentPage(currentPage - 1);\n    } else if (dir == \"right\" && currentPage + 1 < props.data.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow-elements\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-numbering\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [currentPage + 1, \"/\", slidesLength.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-arrows\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            onClick: () => handleClick(\"left\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-chevron-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            onClick: () => handleClick(\"right\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-chevron-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-caption\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.data[currentPage].alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.data[currentPage].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow-dots\",\n      children: /*#__PURE__*/_jsxDEV(InitDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s2(SlideShowComponent, \"kF5zyetxw6M8BnbNC3J8pG5ccpI=\");\n_c = SlideShowComponent;\nexport { SlideShowComponent };\nvar _c;\n$RefreshReg$(_c, \"SlideShowComponent\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SlideShowComponent","props","_s2","_s","$RefreshSig$","slidesLength","data","map","a","name","console","log","currentPage","setCurrentPage","InitDots","isActive","setIsActive","element","index","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","dir","length","children","alt","src","url","_c","$RefreshReg$"],"sources":["C:/Users/Stipe/Desktop/NEET Akademija/REACT/test/drugi_test/react-basics-trokut/src/components/Slideshow/Slideshow.js"],"sourcesContent":["/** Here you can write the code for your slideshow component\r\n *  you can use the images placed in the slideshowData file\r\n */\r\nimport { useState } from \"react\";\r\nimport \"./Slideshow.scss\";\r\n\r\nfunction SlideShowComponent (props) {\r\n    let slidesLength = props.data.map(a => a.name);\r\n    console.log(slidesLength);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    function InitDots() {\r\n        const [isActive, setIsActive] = useState(false);\r\n        return(\r\n            props.data.map((element, index) => <i className=\"bi bi-circle-fill\" id={index} onClick={() => setCurrentPage(index)}></i> )\r\n        )\r\n    }\r\n\r\n    function handleClick(dir) {\r\n        if (dir == \"left\" && currentPage != 0 ) {\r\n            setCurrentPage(currentPage - 1);\r\n        } else if (dir == \"right\" && currentPage + 1 < props.data.length) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"main-container\">\r\n            <div className=\"slideshow-container\">\r\n                <div className=\"slideshow-elements\">\r\n                    <div className=\"element-numbering\">\r\n                        <p>{currentPage+1}/{slidesLength.length}</p>\r\n                    </div>\r\n                    <div className=\"element-arrows\">\r\n                        <div className=\"left\" onClick={() => handleClick(\"left\")}>\r\n                            <i className=\"bi bi-chevron-left\"></i>\r\n                        </div>\r\n                        <div className=\"right\" onClick={() => handleClick(\"right\")}>\r\n                            <i className=\"bi bi-chevron-right\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"element-caption\">\r\n                        <p>{props.data[currentPage].alt}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"slideshow-image\">\r\n                    <img src={props.data[currentPage].url}></img>\r\n                </div>\r\n            </div>\r\n            <div className=\"slideshow-dots\">\r\n                <InitDots/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {SlideShowComponent};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}